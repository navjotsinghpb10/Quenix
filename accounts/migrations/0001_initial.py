# Generated by Django 2.2.8 on 2020-12-13 07:19

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9!@#$&()\\\\-`.+,/\\"]*$', 'Only contains alphanumeric and special characters.')])),
                ('full_name', models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only characters are allowed.')])),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only characters are allowed.')])),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only characters are allowed.')])),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('avatar', models.FileField(blank=True, null=True, upload_to='profile_pic')),
                ('dob', models.DateField(blank=True, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Prefer not to say', 'Prefer not to say')], max_length=20, null=True)),
                ('state', models.PositiveIntegerField(choices=[(1, 'Active'), (2, 'Block')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Android'), (2, 'ios')], null=True)),
                ('device_name', models.CharField(blank=True, max_length=50, null=True)),
                ('device_token', models.CharField(blank=True, max_length=500, null=True)),
                ('created_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_device',
                'managed': True,
            },
        ),
    ]
